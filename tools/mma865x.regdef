/**
 * @file mma865x.h
 * @brief The mma865x.h contains the MMA865xFC Digital Accelerometer Sensor register definitions, access macros, and
 * device access functions.
 *
 * @copyright Copyright (c) 2016, Freescale Semiconductor, Inc.
 */
#ifndef MMA865x_H_
#define MMA865x_H_

/**
 **
 **  MMA865x Sensor Internal Registers
 */
enum {
        MMA865x_STATUS             = 0x00,
        MMA865x_F_STATUS           = 0x00,
        MMA865x_OUT_X_MSB          = 0x01,
        MMA865x_OUT_X_LSB          = 0x02,
        MMA865x_OUT_Y_MSB          = 0x03,
        MMA865x_OUT_Y_LSB          = 0x04,
        MMA865x_OUT_Z_MSB          = 0x05,
        MMA865x_OUT_Z_LSB          = 0x06,
        MMA865x_F_SETUP            = 0x09,
        MMA865x_TRIG_CFG           = 0x0A,
        MMA865x_SYSMOD             = 0x0B,
        MMA865x_INT_SOURCE         = 0x0C,
        MMA865x_WHO_AM_I           = 0x0D,
        MMA865x_XYZ_DATA_CFG       = 0x0E,
        MMA865x_HP_FILTER_CUTOFF   = 0x0F,
        MMA865x_PL_STATUS          = 0x10,
        MMA865x_PL_CFG             = 0x11,
        MMA865x_PL_COUNT           = 0x12,
        MMA865x_PL_BF_ZCOMP        = 0x13,
        MMA865x_P_L_THS_REG        = 0x14,
        MMA865x_FF_MT_CFG          = 0x15,
        MMA865x_FF_MT_SRC          = 0x16,
        MMA865x_FF_MT_THS          = 0x17,
        MMA865x_FF_MT_COUNT        = 0x18,
        MMA865x_TRANSIENT_CFG      = 0x1D,
        MMA865x_TRANSIENT_SRC      = 0x1E,
        MMA865x_TRANSIENT_THS      = 0x1F,
        MMA865x_TRANSIENT_COUNT    = 0x20,
        MMA865x_PULSE_CFG          = 0x21,
        MMA865x_PULSE_SRC          = 0x22,
        MMA865x_PULSE_THSX         = 0x23,
        MMA865x_PULSE_THSY         = 0x24,
        MMA865x_PULSE_THSZ         = 0x25,
        MMA865x_PULSE_TMLT         = 0x26,
        MMA865x_PULSE_LTCY         = 0x27,
        MMA865x_PULSE_WIND         = 0x28,
        MMA865x_ASLP_COUNT         = 0x29,
        MMA865x_CTRL_REG1          = 0x2A,
        MMA865x_CTRL_REG2          = 0x2B,
        MMA865x_CTRL_REG3          = 0x2C,
        MMA865x_CTRL_REG4          = 0x2D,
        MMA865x_CTRL_REG5          = 0x2E,
        MMA865x_OFF_X              = 0x2F,
        MMA865x_OFF_Y              = 0x30,
        MMA865x_OFF_Z              = 0x31,
};


#define MMA865x_I2C_ADDRESS     (0x1D)  /* MMA865x I2C Slave Address. */
#define MMA8652_WHOAMI_VALUE    (0x4A)  /* MMA8652 Who_Am_I Value. */
#define MMA8653_WHOAMI_VALUE    (0x5A)  /* MMA8653 Who_Am_I Value. */


// STATUS         : 0x00 -  Data Status register (F_MODE = 00)
#add xdr            0x01 -  X-Axis new Data Available.
#val DRDY           1    -  Set to 1 whenever new X-axis data acquisition is completed. XDR is cleared any time OUT_X_MSB register is read.
#add ydr            0x02 -  Y-Axis new data available.
#val DRDY           1    -  Set to 1 whenever new Y-axis data acquisition is completed. YDR is cleared any time OUT_Y_MSB register is read.
#add zdr            0x04 -  Z-Axis new data available.
#val DRDY           1    -  Set to 1 whenever new Z-axis data acquisition is completed. ZDR is cleared any time OUT_Z_MSB register is read.
#add zyxdr          0x08 -  X or Y or Z-Axis new data available.
#val DRDY           1    -  Signals that new acquisition for any of the enabled channels is available. ZYXDR is cleared when the high-bytes of the data (OUT_X_MSB, OUT_Y_MSB, OUT_Z_MSB) of all the enabled channels are read.
#add xow            0x10 -  X-Axis data overwrite.
#val OWR            1    -  Set to 1 whenever new X-axis acquisition is completed before the retrieval of the previous data. When this occurs the previous data is overwritten. XOW is cleared any time OUT_X_MSB register is read.
#add yow            0x20 -  Y-Axis data overwrite.
#val OWR            1    -  Set to 1 whenever new Y-axis acquisition is completed before the retrieval of the previous data. When this occurs the previous data is overwritten. YOW is cleared any time OUT_Y_MSB register is read.
#add zow            0x40 -  Z-Axis data overwrite.
#val OWR            1    -  Set to 1 whenever new Z-axis acquisition is completed before the retrieval of the previous data. When this occurs the previous data is overwritten. ZOW is cleared any time OUT_Z_MSB register is read.
#add zyxow          0x80 -  X, Y, Z-Axis data overwrite.
#val OWR            1    -  Set to 1 whenever new data is acquired before completing the retrieval of the previous set. This event occurs when the content of at least one data register (i.e. OUT_X, OUT_Y, OUT_Z) has been overwritten. ZYXOW is cleared when the highbytes of the data (OUT_X_MSB, OUT_Y_MSB, OUT_Z_MSB) of all active channels are read.


// F_STATUS       : 0x00 - FIFO Status register (F_MODE > 0)
#add f_cnt          0x3F - FIFO sample counter; indicates the number of samples currently stored in the FIFO.
#add f_wmkf         0x40 - FIFO sample count greater than or equal to the watermark count (F_SETUP :: F_WMRK) has been detected.
#val NONE           0    - FIFO Watermark event has NOT been detected.
#val DETECTED       1    - FIFO Watermark event has been detected.
#add f_ovf          0x80 - FIFO overflow event, such as when F_CNT = 32 and a new sample arrives, asserts the F_OVF flag.
#val NONE           0    - FIFO Overflow event has NOT been detected.
#val DETECTED       1    - FIFO Overflow event has been detected.


// OUT_X_MSB      : 0x01 -  Bits 8-15 of 12-bit real-time Magnetic Field Strength sample expressed as signed 2's complement numbers.
// OUT_X_LSB      : 0x02 -  Bits 0-7  of 12-bit real-time Magnetic Field Strength sample expressed as signed 2's complement numbers.
// OUT_Y_MSB      : 0x03 -  Bits 8-15 of 12-bit real-time Magnetic Field Strength sample expressed as signed 2's complement numbers.
// OUT_Y_LSB      : 0x04 -  Bits 0-7  of 12-bit real-time Magnetic Field Strength sample expressed as signed 2's complement numbers.
// OUT_Z_MSB      : 0x05 -  Bits 8-15 of 12-bit real-time Magnetic Field Strength sample expressed as signed 2's complement numbers.
// OUT_Z_LSB      : 0x06 -  Bits 0-7  of 12-bit real-time Magnetic Field Strength sample expressed as signed 2's complement numbers.


// F_SETUP        : 0x09 - FIFO configuration
#add f_wmrk         0x3F - FIFO sample count watermark setting.
#add f_mode         0xC0 - FIFO operating mode selection.
#val FIFO_OFF       0    - FIFO is disabled.
#val CIR_MODE       1    - FIFO is in Circular Buffer mode.
#val STOP_MODE      2    - FIFO is in Stop mode.
#val TRIG_MODE      3    - FIFO is in Trigger mode. The FIFO will be in a circular mode until the trigger event occurs, after which the FIFO will continue to accept samples for WMRK samples and then stop receiving further samples.


// TRIG_CFG        : 0x0A - Trigger Configuration register
#add trig_trans     0x20 - Transient Interrupt Trigger.
#val EN             1    - This function can trigger the FIFO at its (the function’s) interrupt.
#val DISABLED       0    - This function has not asserted its interrupt.
#add trig_lndprt    0x10 - Landscape/Portrait Orientation Interrupt Trigger.
#val EN             1    - This function can trigger the FIFO at its (the function’s) interrupt.
#val DISABLED       0    - This function has not asserted its interrupt.
#add trig_pulse     0x08 - Pulse Interrupt Trigger.
#val EN             1    - This function can trigger the FIFO at its (the function’s) interrupt.
#val DISABLED       0    - This function has not asserted its interrupt.
#add trig_ff_mt     0x04 - Freefall/Motion Trigger.
#val EN             1    - This function can trigger the FIFO at its (the function’s) interrupt.
#val DISABLED       0    - This function has not asserted its interrupt.


// SYSMOD         : 0x0B - System Mode register (Read-Only)
#add fgerr          0x80 - FIFO Gate Error.
#val NONE           0    - No FIFO Gate Error detected.
#val DETECTED       1    - FIFO Gate Error was detected.
#add fgt            0x7C - Number of ODR time units since FGERR was asserted.
#add sysmod         0x03 - System mode data bits 0-1.
#val STANDBY        0    - STANDBY Mode.
#val WAKE           1    - WAKE Mode.
#val SLEEP          2    - SLEEP Mode.


// INT_SOURCE     : 0x0C - Interrupt source status
#add src_aslp       0x80 - Auto-SLEEP/WAKE interrupt status bit.
#val READY          1    - An interrupt event that can cause a WAKE-to-SLEEP or SLEEP-to-WAKE system mode transition has occurred.
#val INACTIVE       0    - No WAKE-to-SLEEP or SLEEP-to-WAKE system mode transition interrupt event has occurred.
#add src_fifo       0x40 - FIFO interrupt status bit.
#val READY          1    - A FIFO interrupt event (such as an overflow event or watermark) has occurred.
#val INACTIVE       0    - No FIFO interrupt event has occurred.
#add src_trans      0x20 - Transient interrupt status bit.
#val READY          1    - An acceleration transient value greater than user-specified threshold has occurred.
#val INACTIVE       0    - No transient event has occurred.
#add src_lndprt     0x10 - Landscape/Portrait Orientation interrupt status bit.
#val READY          1    - An interrupt was generated due to a change in the device orientation status.
#val INACTIVE       0    - No change in orientation status was detected.
#add src_pulse      0x08 - Pulse interrupt status bit
#val READY          1    - An interrupt was generated due to single and/or double pulse event.
#val INACTIVE       0    - No pulse event was detected.
#add src_ff_mt      0x04 - Freefall/Motion interrupt status bit
#val READY          1    - The Freefall/Motion function interrupt is active.
#val INACTIVE       0    - No Freefall or Motion event was detected.
#add src_drdy       0x01 - Data Ready Interrupt bit status bit
#val READY          1    - The X, Y, Z data ready interrupt is active.
#val INACTIVE       0    - The X, Y, Z interrupt is not active.


// WHO_AM_I       : 0x0D - Device identification register containing Fixed Device ID Number


// XYZ_DATA_CFG   : 0x0E - Sets the dynamic range and sets the high-pass filter for the output data
#add hpf_out        0x10 - Enable high-pass output data.
#val ENABLE         1    - Output data is high-pass filtered.
#val DISABLE        0    - Output data is not high-pass filtered.
#add fs             0x03 - Full-scale range selection.
#val 2g             0    - ±2 g.
#val 4g             1    - ±4 g.
#val 8g             2    - ±8 g.


// HP_FILTER_CUTOFF : 0x0F - High-Pass Filter register
#add pulse_hpf_byp    0x20 - Bypass High-Pass Filter (HPF) for pulse processing function.
#val ENABLED          0    - HPF is enabled for pulse processing.
#val BYPASSED         1    - HPF is bypassed for pulse processing.
#add pulse_lpf_en     0x10 - Enable Low-Pass Filter (LPF) for pulse processing function.
#val DISABLED         0    - LPF is disabled for pulse processing.
#val ENABLED          1    - LPF is enabled for pulse processing.
#add sel              0x03 - HPF cutoff frequency selection. This value depends on the OSR and ODR (refer to Table 33 of data sheet for more details).
#val VAL_0            0    - Select 0   0
#val VAL_1            0    - Select 0   1
#val VAL_2            0    - Select 1   0
#val VAL_3            0    - Select 1   1


// PL_STATUS      : 0x10 - Portrait/Landscape Status register
#add newlp          0x80 - Landscape/Portrait status change flag.
#val NO_CHANGE      0    - No change.
#val DETECTED       1    - BAFRO and/or LAPO and/or Z-Tilt lockout value has changed.
#add lo             0x40 - Z-Tilt Angle Lockout.
#val NOT_DETECTED   0    - Lockout condition has not been detected.
#val DETECTED       1    - Z-Tilt lockout trip angle has been exceeded. Lockout has been detected.
#add lapo           0x06 - Landscape/Portrait orientation.
#val PORTRAIT_UP    0    - Portrait Up: Equipment standing vertically in the normal orientation.
#val PORTRAIT_DOWN  1    - Portrait Down: Equipment standing vertically in the inverted orientation.
#val LANDSCAPE_UP   2    - Landscape Right: Equipment is in landscape mode to the right.
#val LANDSCAPE_DOWN 3    - Landscape Left: Equipment is in landscape mode to the left.
#add bafro          0x01 - Back or Front orientation.
#val FRONT          0    - Front: Equipment is in the front-facing orientation.
#val BACK           1    - Back: Equipment is in the back-facing orientation.


// PL_CFG         : 0x11 - Portrait/Landscape Configuration register
#add dbcntm         0x80 - Debounce counter mode selection.
#val DECREMENT      0    - Decrements debounce whenever the condition of interest is no longer valid.
#val CLEAR          1    - Clears the counter whenever the condition of interest is no longer valid.
#add pl_en          0x40 - Portrait/Landscape detection enable.
#val DISABLED       0    - Portrait/Landscape Detection is disabled.
#val EN             1    - Portrait/Landscape Detection is enabled.


// PL_COUNT       : 0x12 - Portrait/Landscape Debounce register


// PL_BF_ZCOMP    : 0x13 - Back/Front and Z Compensation register
#add bkfr           0xC0 - Back/Front trip angle threshold (Step size = 5° and Range = ±(65° to 80°)).
#val VAL_0          0    - Back/Front Transition : 00 Z < 80° or Z > 280° and Front/Back Transition : Z > 100° and Z < 260°.
#val VAL_1          1    - Back/Front Transition : 01 Z < 75° or Z > 285° and Front/Back Transition : Z > 105° and Z < 255°.
#val VAL_2          2    - Back/Front Transition : 10 Z < 70° or Z > 290° and Front/Back Transition : Z > 110° and Z < 250°.
#val VAL_3          3    - Back/Front Transition : 11 Z < 65° or Z > 295° and Front/Back Transition : Z > 115° and Z < 245°.
#add zlock          0x07 - Z-lock angle threshold (Step size is 4° and Range is from 14° to 43°).
#val VAL_14         0    - Threshold Angle = 14°.
#val VAL_18         1    - Threshold Angle = 18°.
#val VAL_21         2    - Threshold Angle = 21°.
#val VAL_25         3    - Threshold Angle = 25°.
#val VAL_29         4    - Threshold Angle = 29°.
#val VAL_33         5    - Threshold Angle = 33°.
#val VAL_37         6    - Threshold Angle = 37°.
#val VAL_42         7    - Threshold Angle = 42°.


// P_L_THS_REG    : 0x14 - Portrait/Landscape Threshold and Hysteresis register
#add p_l_ths        0xF8 - Portrait/Landscape trip threshold angle (from 15° to 75°).
#val VAL_15         0x07 - Threshold Angle = 15°
#val VAL_20         0x09 - Threshold Angle = 20°
#val VAL_30         0x0C - Threshold Angle = 30°
#val VAL_35         0x0D - Threshold Angle = 35°
#val VAL_40         0x0F - Threshold Angle = 40°
#val VAL_45         0x10 - Threshold Angle = 45°
#val VAL_55         0x13 - Threshold Angle = 55°
#val VAL_60         0x14 - Threshold Angle = 60°
#val VAL_70         0x17 - Threshold Angle = 70°
#val VAL_75         0x19 - Threshold Angle = 75°
#add hys            0x07 - Hysteresis value : This angle is added to the threshold angle, for a smoother transition from portrait to landscape and landscape to portrait. This angle ranges from 0° to ±24°.
#val VAL_0          0    - Hysteresis ± Angle Range = ±0
#val VAL_1          1    - Hysteresis ± Angle Range = ±4
#val VAL_2          2    - Hysteresis ± Angle Range = ±7
#val VAL_3          3    - Hysteresis ± Angle Range = ±11
#val VAL_4          4    - Hysteresis ± Angle Range = ±14
#val VAL_5          5    - Hysteresis ± Angle Range = ±17
#val VAL_6          6    - Hysteresis ± Angle Range = ±21
#val VAL_7          7    - Hysteresis ± Angle Range = ±24


// FF_MT_CFG      : 0x15 - Freefall/Motion Configuration register
#add ele            0x80 - Event Latch Enable: Event flags are latched into FF_MT_SRC register.
#val DISABLED       0    - Event flag latch disabled.
#val EN             1    - Event flag latch enabled.
#add oae            0x40 - Motion detect / Freefall detect flag selection.
#val FREEFALL       0    - Freefall flag (Logical AND combination).
#val MOTION         1    - Motion flag (Logical OR combination).
#add zefe           0x20 - Event flag enable on Z.
#val DISABLED       0    - Event detection disabled.
#val EN             1    - Raise event flag on measured acceleration value beyond preset threshold.
#add yefe           0x10 - Event flag enable on Y event.
#val DISABLED       0    - Event detection disabled.
#val EN             1    - Raise event flag on measured acceleration value beyond preset threshold.
#add xefe           0x08 - Event flag enable on X event.
#val DISABLED       0    - Event detection disabled.
#val EN             1    - Raise event flag on measured acceleration value beyond preset threshold.


// FF_MT_SRC      : 0x16 - Freefall/Motion Source register
#add ea             0x80 - Event Active flag.
#val NONE           0    - No event flag has been asserted.
#val DETECTED       1    - One or more event flags has been asserted.
#add zhe            0x20 - Z-Motion flag.
#val NONE           0    - No Z motion event detected.
#val DETECTED       1    - Z motion has been detected.
#add zhp            0x10 - Z-Motion Polarity Flag.
#val POSITIVE       0    - Z event was positive g.
#val NEGATIVE       1    - Z event was negative g.
#add yhe            0x08 - Y-Motion Flag.
#val NONE           0    - No Y motion event detected.
#val DETECTED       1    - Y motion has been detected.
#add yhp            0x04 - Y-Motion Polarity Flag.
#val POSITIVE       0    - Y event detected was positive g.
#val NEGATIVE       1    - Y event was negative g.
#add xhe            0x02 - X-Motion Flag.
#val NONE           0    - No X motion event detected.
#val DETECTED       1    - X motion has been detected.
#add xhp            0x01 - X-Motion Polarity Flag.
#val POSITIVE       0    - X event was positive g.
#val NEGATIVE       1    - X event was negative g.


// FF_MT_THS      : 0x17 - Freefall and Motion Threshold register
#add dbcntm         0x80 - Debounce counter mode selection.
#val INC_DEC        0    - Increments or decrements debounce.
#val INC_CLR        1    - Increments or clears counter.
#add ths            0x7F - Freefall /Motion Threshold.


// FF_MT_COUNT    : 0x18 - Debounce register


// TRANSIENT_CFG  : 0x1D - Transient Configuration register
#add ele            0x10 - Transient event flags are latched into the TRANSIENT_SRC register.
#val DISABLED       0    - Event flag latch disabled.
#val EN             1    - Event flag latch enabled.
#add ztefe          0x08 - Event flag enable for Z-transient acceleration greater than a transient threshold event.
#val DISABLED       0    - Event detection disabled.
#val EN             1    - Raise event flag on measured acceleration delta value that is greater than a transient threshold.
#add ytefe          0x04 - Event flag enable for Y-transient acceleration greater than a transient threshold event.
#val DISABLED       0    - Event detection disabled.
#val EN             1    - Raise event flag on measured acceleration delta value that is greater than a transient threshold.
#add xtefe          0x02 - Event flag enable for X-transient acceleration greater than a transient threshold event.
#val DISABLED       0    - Event detection disabled.
#val EN             1    - Raise event flag on measured acceleration delta value that is greater than a transient threshold.
#add hpf_byp        0x01 - Bypass high-pass filter.
#val THROUGH_HPF    0    - Data to transient acceleration detection block is through HPF.
#val NOT_HPF        1    - Data to transient acceleration detection block is NOT Through HPF.


// TRANSIENT_SRC  : 0x1E - Transient Source register
#add ea             0x40 - Event Active Flag.
#val NONE           0    - No event flag has been asserted.
#val DETECTED       1    - One or more event flags has been asserted.
#add ztranse        0x20 - Z-transient event.
#val NONE           0    - No interrupt.
#val DETECTED       1    - Z-transient acceleration greater than the value of TRANSIENT_THS event has occurred.
#add z_trans_pol    0x10 - Polarity of Z-Transient Event that triggered the interrupt.
#val POSITIVE       0    - Z-event was positive g.
#val NEGATIVE       1    - Z-event was negative g.
#add ytranse        0x08 - Y-transient event.
#val NONE           0    - No interrupt.
#val DETECTED       1    - Y-transient acceleration greater than the value of TRANSIENT_THS event has occurred.
#add y_trans_pol    0x04 - Polarity of Y-Transient Event that triggered the interrupt.
#val POSITIVE       0    - Y-event was Positive g.
#val NEGATIVE       1    - Y-event was Negative g.
#add xtranse        0x02 - X-transient event.
#val NONE           0    - No interrupt.
#val DETECTED       1    - X-transient acceleration greater than the value of TRANSIENT_THS event has occurred.
#add x_trans_pol    0x01 - Polarity of X-Transient Event that triggered the interrupt.
#val POSITIVE       0    - X-event was Positive g.
#val NEGATIVE       1    - X-event was Negative g.


// TRANSIENT_THS  : 0x1F - Transient threshold register
#add dbcntm         0x80 - Debounce counter mode selection.
#val INC_DEC        0    - Increments or decrements debounce.
#val INC_CLR        1    - Increments or clears counter.
#add ths            0x7F - Transient Threshold (A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8 g).


// TRANSIENT_COUNT : 0x20 - Transient count register


// PULSE_CFG      : 0x21 - Pulse configuration register
#add dpa            0x80 - Double Pulse Abort.
#val NOT_ABORTED    0    - Double Pulse detection is not aborted if the start of a pulse is detected during the time period specified by the PULSE_LTCY register.
#val SUSPENDED      1    - Setting the DPA bit momentarily suspends the double tap detection if the start of a pulse is detected during the time period specified by the PULSE_LTCY register, and the pulse ends before the end of the time period specified by the PULSE_LTCY register.
#add ele            0x40 - Pulse event flags are latched into the PULSE_SRC register.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.
#add zdpefe         0x20 - Event flag enable for a double pulse event on Z-axis.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.
#add zspefe         0x10 - Event flag enable for a single pulse event on Z-axis.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.
#add ydpefe         0x08 - Event flag enable for a double pulse event on Y-axis.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.
#add yspefe         0x04 - Event flag enable for a single pulse event on Y-axis.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.
#add xdpefe         0x02 - Event flag enable for a double pulse event on X-axis.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.
#add xspefe         0x01 - Event flag enable for a single pulse event on X-axis.
#val DISABLED       0    - Event detection is disabled.
#val EN             1    - Event detection is enabled.


// PULSE_SRC      : 0x22 - Pulse source register
#add ea             0x80 - Event Active Flag.
#val NONE           0    - No interrupt has been generated.
#val DETECTED       1    - One or more interrupt events have been generated.
#add axz            0x40 - Z-axis event.
#val NONE           0    - No interrupt.
#val DETECTED       1    - Z-axis event has occurred.
#add axy            0x20 - Y-axis event.
#val NONE           0    - No interrupt.
#val DETECTED       1    - Y-axis event has occurred.
#add axx            0x10 - X-axis event.
#val NONE           0    - No interrupt.
#val DETECTED       1    - X-axis event has occurred.
#add dpe            0x08 - Double pulse on first event.
#val SINGLE         0    - Single pulse event triggered interrupt.
#val DOUBLE         1    - Double pulse event triggered interrupt.
#add pol_z          0x04 - Pulse polarity of Z-axis event.
#val POSITIVE       0    - Pulse event that triggered interrupt was positive.
#val NEGATIVE       1    - Pulse event that triggered interrupt was negative.
#add pol_y          0x02 - Pulse polarity of Y-axis event.
#val POSITIVE       0    - Pulse event that triggered interrupt was positive.
#val NEGATIVE       1    - Pulse event that triggered interrupt was negative.
#add pol_x          0x01 - Pulse polarity of X-axis event.
#val POSITIVE       0    - Pulse event that triggered interrupt was positive.
#val NEGATIVE       1    - Pulse event that triggered interrupt was negative.


// PULSE_THSX     : 0x23 - Pulse threshold for X-axes register
#add thsx           0x7F - Pulse threshold on X-axis.


// PULSE_THSY     : 0x24 - Pulse threshold for Y-axes register
#add thsy           0x7F - Pulse threshold on Y-axis.


// PULSE_THSZ     : 0x25 - Pulse threshold for Z-axes register
#add thsz           0x7F - Pulse threshold on Z-axis.


// PULSE_TMLT     : 0x26 - First Pulse Time Window register
// PULSE_LTCY     : 0x27 - Pulse Latency Timer register
// PULSE_WIND     : 0x28 - Second Pulse Time Window register
// ASLP_COUNT     : 0x29 - Auto-WAKE/SLEEP Detection register


// CTRL_REG1      : 0x2A - System Control 1 register
#add aslp_rate      0xC0 - Configures the Auto-WAKE sample frequency when the device is in SLEEP Mode.
#val 50Hz           0    - Frequency = 50Hz
#val 12_5Hz         1    - Frequency = 12.5Hz
#val 6_25Hz         2    - Frequency = 6.25Hz
#val 1_56Hz         3    - Frequency = 1.56Hz
#add dr             0x38 - Data rate selection.
#val 800Hz          0    - ODR = 800Hz.
#val 400Hz          1    - ODR = 400Hz.
#val 200Hz          2    - ODR = 200Hz.
#val 100Hz          3    - ODR = 100Hz.
#val 50Hz           4    - ODR = 50Hz.
#val 12_5Hz         5    - ODR = 12.5Hz.
#val 6_25Hz         6    - ODR = 6.25Hz.
#val 1_56Hz         7    - ODR = 1.56Hz.
#add f_read         0x02 - Fast-read mode: Data format is limited to single byte.
#val NORMAL         0    - Normal Mode.
#val FAST           1    - Fast Read Mode.
#add active         0x01 - Full-scale selection.
#val STANDBY        0    - STANDBY mode.
#val ACTIVATED      1    - ACTIVE mode.


// CTRL_REG2      : 0x2B - System Control 2 register
#add st             0x80 - Self-Test Enable.
#val DISABLED       0    - Self-Test disabled.
#val EN             1    - Self-Test enabled.
#add rst            0x40 - Software Reset.
#val DISABLED       0    - Device reset disabled.
#val EN             1    - Device reset enabled.
#add smods          0x18 - SLEEP mode power scheme selection.
#val NORMAL         0    - Normal Mode.
#val LNLP           1    - Low Noise Low Power Mode.
#val HR             2    - High Resolution Mode.
#val LP             3    - Low Power Mode.
#add slpe           0x04 - Auto-SLEEP enable.
#val DISABLED       0    - Auto-SLEEP is not enabled.
#val EN             1    - Auto-SLEEP is enabled.
#add mods           0x03 - ACTIVE mode power scheme selection.
#val NORMAL         0    - Normal Mode.
#val LNLP           1    - Low Noise Low Power Mode.
#val HR             2    - High Resolution Mode.
#val LP             3    - Low Power Mode.


// CTRL_REG3      : 0x2C - Interrupt Control register
#add fifo_gate      0x80 - FIFO Gate
#val BYPASSED       0    - FIFO gate is bypassed.
#val BLOCKED        1    - The FIFO input buffer is blocked when transitioning from WAKE to SLEEP mode or from SLEEP to WAKE mode, until the FIFO is flushed.
#add wake_trans     0x40 - Wake from Transient interrupt.
#val BYPASSED       0    - Transient function is bypassed in SLEEP mode.
#val EN             1    - Transient function interrupt can wake up system.
#add wake_lndprt    0x20 - Wake from Orientation interrupt.
#val BYPASSED       0    - Orientation function is bypassed in SLEEP mode.
#val EN             1    - Orientation function interrupt can wake up system.
#add wake_pulse     0x10 - Wake from Pulse interrupt.
#val BYPASSED       0    - Pulse function is bypassed in SLEEP mode.
#val EN             1    - Pulse function interrupt can wake up system.
#add wake_ff_mt     0x08 - Wake from Freefall/Motion interrupt.
#val BYPASSED       0    - Freefall/Motion function is bypassed in SLEEP mode.
#val EN             1    - Freefall/Motion function interrupt can wake up.
#add ipol           0x02 - Selects the polarity of the interrupt signals.
#val ACTIVE_LOW     0    - ACTIVE low.
#val ACTIVE_HIGH    1    - ACTIVE high.
#add pp_od          0x01 - Configures the interrupt pins to Push-Pull or to Open-Drain mode.
#val PUSH_PULL      0    - Push-Pull.
#val OPEN_DRAIN     1    - Open Drain.


// CTRL_REG4      : 0x2D - Interrupt Enable register
#add int_en_aslp    0x80 - Auto-SLEEP/WAKE Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.
#add int_en_fifo    0x40 - FIFO Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.
#add int_en_trans   0x20 - Transient Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.
#add int_en_lndprt  0x10 - Orientation (Landscape/Portrait) Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.
#add int_en_pulse   0x08 - Pulse Detection Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.
#add int_en_ff_mt   0x04 - Freefall/Motion Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.
#add int_en_drdy    0x01 - Data Ready Interrupt Enable.
#val DISABLED       0    - Interrupt is disabled.
#val EN             1    - Interrupt is enabled.


// CTRL_REG5      : 0x2E - Interrupt Configuration register
#add int_cfg_aslp   0x80 - Auto-SLEEP/WAKE INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.
#add int_cfg_fifo   0x40 - FIFO INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.
#add int_cfg_trans  0x20 - Transient INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.
#add int_cfg_lndprt 0x10 - Orientation INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.
#add int_cfg_pulse  0x08 - Pulse INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.
#add int_cfg_ff_mt  0x04 - Freefall/Motion INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.
#add int_cfg_drdy   0x01 - Data Ready INT1/INT2 Configuration.
#val INT2           0    - Interrupt is routed to INT2 pin.
#val INT1           1    - Interrupt is routed to INT1 pin.


// OFF_X          : 0x2F - Offset Correction X register
// OFF_Y          : 0x30 - Offset Correction Y register
// OFF_Z          : 0x31 - Offset Correction Z register


#endif  /* MMA865x_H_ */
